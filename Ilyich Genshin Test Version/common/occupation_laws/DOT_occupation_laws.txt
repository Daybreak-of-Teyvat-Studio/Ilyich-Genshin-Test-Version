##id is used for localization
#example_law = {
#	#tooltip description for the law
#	tooltip = "loc_key"
#
#	#gfx entry & frame for law entry icon
#	#gfx entry can be omitted, in that case it will default to GFX_occupation_policy_icon_strip
#	icon = "GFX_icon:5"
#
#	#plays when the law is selected
#	sound_effect = "sound_effect"
#
#	#if a law is not visible, it won't show up in gui at all
#	#scope is occupier country, occupied country is not set (this is only check at country level, not target level)
#	visible = {
#		always = yes
#	}
#
#	#if a law is not available, it will show up in disable state ingui and won't be selectable
#	#scope is occupier country and from scope is occupied country
#	available = {
#		always = yes
#	}
#
#	#if a current modifier is no longer active (visible/available is false) it will fallback to this law
#	fallback_law = law_id
#
#	#main fallback modifier will be used when previous modifier is no longer active and there is no fallback_law, there must be exactly one fallback modifier
#	#if you are lacking manpower/equipments for your current laws, fallback modifier bonuses will apply instead (will lerp to fallback and at 0 manpower you will be forced to switch)
#	main_fallback_law = yes
#
#	#applies to states if the law is selected
#	state_modifier = {
#
#	}
#
#	#states with resistance supressed (at 0) will get this modifier instead (if defined)
#	suppressed_state_modifier = {
#
#	}
#
#	#by default laws are sorted by load order, gui_order can be used to reorder them in gui. by default it is 0
#	gui_order = 1
#
#	# score used for selecting a law for state
#	# scope is state
#	# from is occupier
#	# from from is occupied
#	# ai_desire_resource temp variables will be available for the triggers,
#	# which is a value in between 0-1 to show desire for a certain resource
#	# uncapped_resistance_target temp variable can be used for getting resistance that that is not capped to 0-100
#	# resistance_target_without_law temp variable can be used for accessing resistance target value that is not modifier by law
#	# garrison_min_support_ratio garrison_equipment_support_ratio garrison_manpower_support_ratio gives what ratio of the garrison factor we can support for current template and buffers
#	ai_will_do = {
#		base = 100
#
#		modifier = {
#			steel > 10
#			add = 100
#		}
#	}
#}

#（天理）不可抗拒
DOT_PRI_Law_of_Occ = {
	icon = 10
	sound_effect = "Martial_Law_Interface_Brutally_Oppressive_Occupation_Unique_FAS"

	visible = {
		original_tag = PRI
	}

	state_modifier = {
		resistance_target 				= -2
		compliance_gain 				= -1
		required_garrison_factor 		= -1
		resistance_damage_to_garrison 	= -1
		resistance_decay 				= 9	
		local_manpower 				    = -1
	}

	ai_will_do = {
		base = 1000
	}
}

#（蒙德）约法三章
DOT_Emergency_Occupy = {
	icon = 2
	sound_effect = "Martial_Law_Interface_Autonomous_Occupation_Unique_DEM"

	visible = {
		Is_MOT = yes
		OR = {
			FROM = {
				original_tag = AND
			}
			FROM = {
				original_tag = DRA
			}
			FROM = {
				original_tag = RAG
			}
			FROM = {
				original_tag = MOT
			}
			FROM = {
				original_tag = LAW
			}
			FROM = {
				original_tag = DVA
			}
			FROM = {
				original_tag = SPI
			}
			FROM = {
				original_tag = FAV
			}
			FROM = {
				original_tag = GUN
			}
		}
		NOT = {
			has_global_flag = MOT_REUNITED
		}
	}

	state_modifier = {
		resistance_target 				= -0.50
		compliance_gain 				= -1
		required_garrison_factor 		= -0.50
		resistance_damage_to_garrison 	= -0.5
		resistance_decay 				= 0.5
		local_factories 				= 0.3
		local_resources 				= 0.3
	}

	ai_will_do = {
		base = 1000
	}
}

#（红）人类解放
DOT_Liberated_Humankind = {
	icon = 5
	sound_effect = "Martial_Law_Interface_Autonomous_Occupation_Unique_DEM"

	visible = {
		has_government = communism
	}

	state_modifier = {
		resistance_target 				= 0.10
		compliance_gain 				= 0.03
		required_garrison_factor 		= 0.25
		resistance_damage_to_garrison 	= 0.25
		resistance_decay 				= 0.5
		local_factories 				= 0.1
		local_resources 				= 0.1
	}

	ai_will_do = {
		base = 300
		modifier = {
			check_variable  = { resistance_target_without_law > 0.34}

			set_temp_variable = { requirement_limit = 0.25 }
			if = {
				limit = { occupation_law = local_police_force_garrison }
				set_temp_variable = { requirement_limit = 0.45 }
			}
			check_variable = { garrison_min_support_ratio < requirement_limit }

			add = -250
		}
	}
}
#（蓝灰白）分化笼络
DOT_Divide_Them = {
	icon = 13
	sound_effect = "Martial_Law_Interface_Martial_Law_Occupation_Default"

	visible = {
		NOT = {
			has_government = communism
			has_government = fascism
		}
	}

	state_modifier = {
		resistance_target 				= -0.30
		compliance_gain 				= -0.04
		required_garrison_factor 		= -0.5
		resistance_damage_to_garrison 	= -0.5
		resistance_decay 				= 0.5
	}

	ai_will_do = {
		base = 100
		modifier = {
			check_variable  = { resistance_target_without_law > 0.34}

			set_temp_variable = { requirement_limit = 0.25 }
			if = {
				limit = { occupation_law = local_police_force_garrison }
				set_temp_variable = { requirement_limit = 0.45 }
			}
			check_variable = { garrison_min_support_ratio < requirement_limit }

			add = 250
		}
	}
}

#（棕）血腥镇压
DOT_Bloody_Suppression = {
	icon = 10
	sound_effect = "Martial_Law_Interface_Brutally_Oppressive_Occupation_Unique_FAS"

	visible = {
		has_government = fascism
	}

	state_modifier = {
		resistance_target 				= -1
		compliance_gain 				= -0.05
		required_garrison_factor 		= 1
		resistance_damage_to_garrison 	= 0.5
		resistance_decay 				= 2		
		local_manpower 				    = -1
		manpower_weekly 				= -1000
	}

	ai_will_do = {
		base = 10
		modifier = {
			check_variable  = { resistance_target_without_law > 0.84 }

			set_temp_variable = { resistance_limit = 40 }
			set_temp_variable = { requirement_limit = 2.0 }
			if = {
				limit = { occupation_law = brutally_oppressive_occupation }
				set_temp_variable = { resistance_limit = 35 }
				set_temp_variable = { requirement_limit = 1.8 }
			}
			check_variable = { garrison_min_support_ratio > requirement_limit }
			resistance > resistance_limit

			add = 1000
		}
	}
}